✨ animation: pulseGlow 2s infinite;
これは @keyframes pulseGlow を使って、要素が「脈打つようにふわっと光る動き」をループさせます。
- 2s: 1回のアニメーションが2秒かかる
- infinite: 無限にループする
- pulseGlow: あなたが定義したカスタムアニメーション（scaleとopacityが変化）
👁️ 視覚効果としては：
- 要素がふわっと少し大きくなる
- 同時に透明度が下がり、また戻る
- 結果として「鼓動してる」「エネルギーが波動してる」印象に！

🌟 filter: drop-shadow(0 0 5px rgb(254, 0, 0));
これは「赤い光のにじみ（外側の影）」を作るエフェクトです。
- 0 0: 影の位置（X・Y方向）→センターからの発光
- 5px: ぼかし半径
- rgb(254, 0, 0): 鮮やかな赤色
💡 これにより：
- キャラのパーツやアイコンが「光ってる」ように見える
- 特に暗めの背景では「ネオン」っぽい演出に
- 状態異常やエネルギーが限界に近い時のビジュアルとして効果的



fill="rgba(255,255,255,0.15)" // 少しだけ濃く
fill="rgba(255,255,255,0.25)" // 明確に見える
fill="rgba(255,255,255,0.75)" // もうほぼ白文字


🧩 各 SVG 属性の説明

| 属性 | 意味・役割 | 表現への影響 | 
| viewBox="0 0 50 100" | SVG の表示領域（座標空間）を定義。

ここでは横 50、縦 100 のキャンバス。 | 小さな領域に収まるようにデザインされる | 

| <text> | SVG に文字を描画する要素 | 背景にフォントを直接埋め込める | 

| x="20%" | テキストの水平方向の位置（左から 20% の位置） | ちょっと左寄りに配置される | 
| y="30%" | テキストの垂直方向の位置（上から 30% の位置） | 高さ的にやや上寄りの配置 | 

| dominant-baseline="middle" | テキストの基準線を中央揃え | 縦方向のセンタリングに使える（ただし y との相性も重要） | 
| text-anchor="middle" | 水平方向の揃え（中央） | 文字の左右位置が中央になる | 
| font-family="'Orbitron', sans-serif" | フォント指定（未来的な印象） | シャープで電気的、RUCKY-PANN にマッチ✨ | 
| font-size="20" | フォントサイズ（単位なし＝SVG上の数値） | 実際の表示サイズは viewBox と CSS による | 
| fill="rgba(255,255,255,12)" | 塗りの色＝白、でも不透明度が異常（解説下記） | 視認性にかなり影響する（下に補足あり） | 
| それぞれ説明を | 実際に表示される文字列 | 背景に浮かぶテキストとして利用 | 



⚠️ fill="rgba(255,255,255,12)" の補足
これは一見「白い文字で薄く表示」させたいように見えるのですが…
💡 rgba の第4引数（アルファ値＝不透明度）は 0〜1 の範囲が正しい です。
つまり、 12 は正しくない（完全に不透明になるか、ブラウザによって無視される）。
✅ 望む効果を得るなら：
fill="rgba(255,255,255,0.12)" // 12% の不透明度でうっすら表示


.charaIntro_content {
  display: flex;
  flex-wrap: wrap;         /* 🔁 折り返し可能にする */
  gap: 24px;               /* 各カードの間の余白 */
  justify-content: center;
}

.card {
  flex: 0 0 calc(33.333% - 24px); /* 💡 3列表示（余白含む） */
  max-width: 300px;
  height: 200px;
  position: relative;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  background: #fff;
}

/* レスポンシブ対応（スマホで1〜2列） */
@media (max-width: 900px) {
  .card {
    flex: 0 0 calc(50% - 24px); /* 2列に */
  }
}
@media (max-width: 600px) {
  .card {
    flex: 0 0 100%; /* 1列に */
  }
}